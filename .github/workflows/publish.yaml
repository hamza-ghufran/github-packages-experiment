name: Package Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    # types: [ closed ]

jobs:
  publish-gpr:
    runs-on: ubuntu-latest
    outputs:
      package_updated: ${{ steps.check.outputs.package_updated }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check org package version changes
        id: check
        run: | 
           git fetch
           if ! git diff --quiet origin/master ./packages/package.json; then
              echo "::set-output name=package_updated::true"
           else
              echo "::set-output name=package_updated::false"
           fi

  post-merge:
    runs-on: ubuntu-latest
      needs: publish-gpr
      if: github.event.pull_request.merged == true
      steps:
         - name: Set up Node.js for GPR
           if: needs.publish-gpr.outputs.package_updated == 'true'
           uses: actions/setup-node@v1
           with:
             registry-url: "https://npm.pkg.github.com/"
             scope: "@hamza-ghufran"

         - name: Publish package to <Org> github packages
           if: needs.publish-gpr.outputs.package_updated == 'true'
           run: npm publish
           working-directory: ./packages
           env:
             NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # - name: Alert via comment   
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: 'Alert'
      #       })
