# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Package Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
  #     - run: npm ci
  #     - run: gulp test


  publish-gpr:
    # needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Check packages/package.json version changes
        id: check
        run: | 
           if ! git diff --quiet origin/master ./packages/package.json; then
              echo "::set-output name=package_updated::true"
           else
              echo "::set-output name=package_updated::false"
           fi

      # - name: Check version changes
      #   uses: EndBug/version-check@v1
      #   id: check
      #   with: 
      #     diff-search: true
      #     file-name: ./packages/package.json
      #     token: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Version update detected
        run: | 
           echo "${{join(steps.check.outputs.*, '\n')}}"
        # if: steps.check.outputs.package_updated == true
        # run: 'echo "Version change found! \n"'

      # - name: Log when unchanged
      #   if: steps.check.outputs.package_updated == false
      #   run: 'echo "No version change"'  

      # - name: Set up Node.js for GPR
      #   if: steps.check.outputs.package_updated == true
      #   uses: actions/setup-node@v1
      #   with:
      #     registry-url: "https://npm.pkg.github.com/"
      #     scope: "@hamza-ghufran"

      # - name: Publish package to GPR
      #   if: steps.check.outputs.package_updated == true
      #   run: npm publish
      #   working-directory: ./packages
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
